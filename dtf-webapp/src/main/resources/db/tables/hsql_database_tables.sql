
CREATE MEMORY TABLE PUBLIC.CARD(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,TITLE VARCHAR(256),BUSINESSTXT VARCHAR(4096),LEGALTXT VARCHAR(4096),TECHNICALTXT VARCHAR(4096))
ALTER TABLE PUBLIC.CARD ALTER COLUMN ID RESTART WITH 10
CREATE MEMORY TABLE PUBLIC.TAG(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(256))
ALTER TABLE PUBLIC.TAG ALTER COLUMN ID RESTART WITH 16
CREATE MEMORY TABLE PUBLIC.DEPENDENCY(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CARDID BIGINT,DESCRIPTION VARCHAR(4096))
ALTER TABLE PUBLIC.DEPENDENCY ALTER COLUMN ID RESTART WITH 17
CREATE MEMORY TABLE PUBLIC.DEPENDENCYTAGS(DEPENDENCYID BIGINT,TAGID BIGINT,FOREIGN KEY(DEPENDENCYID) REFERENCES PUBLIC.DEPENDENCY(ID),FOREIGN KEY(TAGID) REFERENCES PUBLIC.TAG(ID))
CREATE MEMORY TABLE PUBLIC.PROVIDES(CARDID BIGINT,TAGID BIGINT,FOREIGN KEY(CARDID) REFERENCES PUBLIC.CARD(ID),FOREIGN KEY(TAGID) REFERENCES PUBLIC.TAG(ID))
CREATE MEMORY TABLE PUBLIC.INSTANCE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(256),ROOTCARDNODEID BIGINT)
ALTER TABLE PUBLIC.INSTANCE ALTER COLUMN ID RESTART WITH 1
CREATE MEMORY TABLE PUBLIC.CARDNODE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CARDID BIGINT,PARENTCARDNODEID BIGINT,INSTANCEID BIGINT,FOREIGN KEY(CARDID) REFERENCES PUBLIC.CARD(ID),FOREIGN KEY(PARENTCARDNODEID) REFERENCES PUBLIC.CARDNODE(ID),FOREIGN KEY(INSTANCEID) REFERENCES PUBLIC.INSTANCE(ID))
ALTER TABLE PUBLIC.CARDNODE ALTER COLUMN ID RESTART WITH 1

INSERT INTO CARD VALUES(1,'Trust Framework Rules Envelope','This card indicates the "party" and the location of the "Trust Framework System Rules". In theory any cards could be created in any order, but as a matter of conceptual and policy coherence, this card reflects an initialization steps providing a legal and business basis upon which selection, configuration and publishing the the other cards and corresponding rules, systems, services and transactions.','These rules apply to the issuance, use, acceptance of or reliance on Derived Federated Credentials within the MITRE External Identity Federation.  Neither this Trust Framework, nor any course between the Parties hereunder, shall constitute or create a partnership, joint venture, principal-agent relationship or employer-employee relationship between the Parties.','The following use cases are supported under this Trust Framework: [TBD]  [Commentary: For so long as MITREid is an early-stage research prototype, it is premature to focus on detailed documentation of supported use cases. However, this draft Trust Framework anticipates a future state at which external and internal parties will seek to implement and interoperate with MITRE External Identity Federation services and the important role of this document to facilitate and regulate adoption. To that end, the types of technical use cases that would be relevant and constructive to detail in the future are noted below.      MITREid User Logs Into Grey Listed Relying Party     MITREid User Logs Into White Listed Relying Party     MITREid User Logs Into Black Listed Relying Party     Non-MITRE User Logs Into MITRE External Identity Federation Enabled Site     Non-MITRE CAC User Logs Into MITRE External Identity Federation Enabled Site     MITRE Relying Party Site Implements MITRE External Identity Federation Access     Non-MITRE Identity Provider Added to MITRE External Identity Federation White List     Non-MITRE Relying Party Site Accepts MITREid User Login]')
INSERT INTO CARD VALUES(2,'Scope','This Trust Framework applies to the use by MITRE personnel of OpenID 2.0 and OpenID Connect, collectively called MITREid. This Trust Framework also applies to all non-MITRE users who connect to MITRE systems using the MITRE External Identity Federation.','legal text','technical text')
INSERT INTO CARD VALUES(3,'Roles','The following Roles exist within this system.','legal text','technical text')
INSERT INTO CARD VALUES(4,'id.mitre.org','MITREid Connect is an implementation of OpenID Connect for use by MITRE employees. This service is available to all current MITRE employees on any site that supports the OpenID Connect protocol.','legal text','technical text')
INSERT INTO CARD VALUES(5,'oidc.mit.edu','MIT, This OpenID Connect service is built from the MITREid Connect Open Source project, from The MITRE Corporation and the MIT Kerberos and Internet Trust Consortium.','Massachusetts Institute of Technology, a not-for-profit corporation located at 77 Massachusetts Ave.','oidc.mit.edu, This OpenID Connect service is built from the MITREid Connect Open Source project, from The MITRE Corporation and the MIT Kerberos and Internet Trust Consortium.')
INSERT INTO CARD VALUES(6,'CTO Bob','A senior employee stands behind and authorizes the production deployment of the MITREid System and corresponding Trust Framework System Rules.','The role of ExecutiveOfficer is conducted by parties with authority to make decision of this kind for and on behalf of the MITRE Corporation.','technical text')
INSERT INTO CARD VALUES(7,'John Doe','IT Manager','Reserved for legal text.','technical text placeholder')
INSERT INTO CARD VALUES(8,'Liability','Reserved','THE MITRE CORPORATION MAKES NO WARRANTY, EXPRESS OR IMPLIED, AS TO THE ACCURACY, CAPABILITY, EFFICIENCY, MERCHANTABILITY, OR FUNCTIONALITY OF MITREid OR MITRE EXTERNAL IDENTITY FEDERATION OR ANY INFORMATION OR SERVICES COMPRISING OR RELATED TO MITREid OR MITRE EXTERNAL IDENTITY FEDERATION. IN NO EVENT WILL THE MITRE CORPORATION BE LIABLE FOR ANY GENERAL, CONSEQUENTIAL, INDIRECT, INCIDENTAL, EXEMPLARY, OR SPECIAL DAMAGES, EVEN IF MITRE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.','Reserved')
INSERT INTO CARD VALUES(9,'The MITRE External Identity Federation Certification Policy','Certification is a material consideration favoring the System Operator decision on inclusion of parties to a White List, but is neither required nor sufficient.','Reserved for legal text.','White Listed Identity Providers have their Trust Root for OpenID 2.0 or Issuer for OpenID Connect reflected in the Relying Party.')
INSERT INTO TAG VALUES(1,'PolicyAuthorityParty')
INSERT INTO TAG VALUES(2,'SystemEndpoint')
INSERT INTO TAG VALUES(3,'ExecutiveOfficer')
INSERT INTO TAG VALUES(4,'TrustFrameworkSystemRoles')
INSERT INTO TAG VALUES(5,'SystemOperator')
INSERT INTO TAG VALUES(6,'RelyingParty')
INSERT INTO TAG VALUES(7,'TrustFramework')
INSERT INTO TAG VALUES(8,'IdentityTrustFramework')
INSERT INTO TAG VALUES(9,'Liability')
INSERT INTO TAG VALUES(10,'Certification')
INSERT INTO TAG VALUES(11,'SystemRoles')
INSERT INTO TAG VALUES(12,'Roles')
INSERT INTO TAG VALUES(13,'Scope')
INSERT INTO TAG VALUES(14,'IdentityProvider')
INSERT INTO TAG VALUES(15,'UserAuthority')
INSERT INTO DEPENDENCY VALUES(5,3,'Policy Authority')
INSERT INTO DEPENDENCY VALUES(6,3,'Relying Party')
INSERT INTO DEPENDENCY VALUES(10,1,'Scope')
INSERT INTO DEPENDENCY VALUES(11,1,'Liability')
INSERT INTO DEPENDENCY VALUES(12,1,'Roles')
INSERT INTO DEPENDENCY VALUES(14,1,'Certification')
INSERT INTO DEPENDENCY VALUES(15,3,'Identity Provider')
INSERT INTO DEPENDENCY VALUES(16,3,'User Authority')
INSERT INTO DEPENDENCYTAGS VALUES(6,6)
INSERT INTO DEPENDENCYTAGS VALUES(10,13)
INSERT INTO DEPENDENCYTAGS VALUES(11,9)
INSERT INTO DEPENDENCYTAGS VALUES(12,12)
INSERT INTO DEPENDENCYTAGS VALUES(14,10)
INSERT INTO DEPENDENCYTAGS VALUES(5,1)
INSERT INTO DEPENDENCYTAGS VALUES(15,14)
INSERT INTO DEPENDENCYTAGS VALUES(16,15)
INSERT INTO PROVIDES VALUES(5,2)
INSERT INTO PROVIDES VALUES(6,3)
INSERT INTO PROVIDES VALUES(6,5)
INSERT INTO PROVIDES VALUES(7,5)
INSERT INTO PROVIDES VALUES(1,8)
INSERT INTO PROVIDES VALUES(8,9)
INSERT INTO PROVIDES VALUES(2,13)
INSERT INTO PROVIDES VALUES(3,12)
INSERT INTO PROVIDES VALUES(4,14)
INSERT INTO PROVIDES VALUES(5,14)
INSERT INTO PROVIDES VALUES(4,2)
INSERT INTO PROVIDES VALUES(9,10)
