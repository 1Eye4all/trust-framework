
CREATE MEMORY TABLE PUBLIC.CARD(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,TITLE VARCHAR(256),BUSINESSTXT VARCHAR(4096),LEGALTXT VARCHAR(4096),TECHNICALTXT VARCHAR(4096))
ALTER TABLE PUBLIC.CARD ALTER COLUMN ID RESTART WITH 13
CREATE MEMORY TABLE PUBLIC.TAG(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(256))
ALTER TABLE PUBLIC.TAG ALTER COLUMN ID RESTART WITH 23
CREATE MEMORY TABLE PUBLIC.DEPENDENCY(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CARDID BIGINT,DESCRIPTION VARCHAR(4096))
ALTER TABLE PUBLIC.DEPENDENCY ALTER COLUMN ID RESTART WITH 25
CREATE MEMORY TABLE PUBLIC.DEPENDENCYTAGS(DEPENDENCYID BIGINT,TAGID BIGINT,FOREIGN KEY(DEPENDENCYID) REFERENCES PUBLIC.DEPENDENCY(ID),FOREIGN KEY(TAGID) REFERENCES PUBLIC.TAG(ID))
CREATE MEMORY TABLE PUBLIC.PROVIDES(CARDID BIGINT,TAGID BIGINT,FOREIGN KEY(CARDID) REFERENCES PUBLIC.CARD(ID),FOREIGN KEY(TAGID) REFERENCES PUBLIC.TAG(ID))
CREATE MEMORY TABLE PUBLIC.INSTANCE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,NAME VARCHAR(256),ROOTCARDNODEID BIGINT)
ALTER TABLE PUBLIC.INSTANCE ALTER COLUMN ID RESTART WITH 1
CREATE MEMORY TABLE PUBLIC.CARDNODE(ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,CARDID BIGINT,PARENTCARDNODEID BIGINT,INSTANCEID BIGINT,FOREIGN KEY(CARDID) REFERENCES PUBLIC.CARD(ID),FOREIGN KEY(PARENTCARDNODEID) REFERENCES PUBLIC.CARDNODE(ID),FOREIGN KEY(INSTANCEID) REFERENCES PUBLIC.INSTANCE(ID))
ALTER TABLE PUBLIC.CARDNODE ALTER COLUMN ID RESTART WITH 1

INSERT INTO CARD VALUES(1,'Trust Framework Rules Envelope','This card indicates the "party" and the location of the "Trust Framework System Rules". In theory any cards could be created in any order, but as a matter of conceptual and policy coherence, this card reflects an initialization steps providing a legal and business basis upon which selection, configuration and publishing the the other cards and corresponding rules, systems, services and transactions. Based on: https://github.com/mitreid-connect/trust-framework/blob/master/TrustFramework.md','These rules apply to the issuance, use, acceptance of or reliance on Derived Federated Credentials within the MITRE External Identity Federation.  Neither this Trust Framework, nor any course between the Parties hereunder, shall constitute or create a partnership, joint venture, principal-agent relationship or employer-employee relationship between the Parties.','The following use cases are supported under this Trust Framework: [TBD]  [Commentary: For so long as MITREid is an early-stage research prototype, it is premature to focus on detailed documentation of supported use cases. However, this draft Trust Framework anticipates a future state at which external and internal parties will seek to implement and interoperate with MITRE External Identity Federation services and the important role of this document to facilitate and regulate adoption. To that end, the types of technical use cases that would be relevant and constructive to detail in the future are noted below.      MITREid User Logs Into Grey Listed Relying Party     MITREid User Logs Into White Listed Relying Party     MITREid User Logs Into Black Listed Relying Party     Non-MITRE User Logs Into MITRE External Identity Federation Enabled Site     Non-MITRE CAC User Logs Into MITRE External Identity Federation Enabled Site     MITRE Relying Party Site Implements MITRE External Identity Federation Access     Non-MITRE Identity Provider Added to MITRE External Identity Federation White List     Non-MITRE Relying Party Site Accepts MITREid User Login]')
INSERT INTO CARD VALUES(2,'Scope','This Trust Framework applies to the use by MITRE personnel of OpenID 2.0 and OpenID Connect, collectively called MITREid. This Trust Framework also applies to all non-MITRE users who connect to MITRE systems using the MITRE External Identity Federation.','The authoritative current version of the Trust Framework System Rules can be found at www.mitre.org/trustframework [note actual URL to be determined]. These Rules, including all documents explicitly Incorporated by Reference, provide standard default terms for use of the External Identity Federation, but in the event of a conflict between the terms of an existing contract between parties governing the terms of access to relevant applications or services, then the terms of the existing contract shall govern.  When the text of these Rules explicitly refers to a \u201cdocument Incorporated by Reference\u201d and includes a URL to the authoritative version of that document, then the content of that document shall have the same force and effect as if directly published within these Rules.','reserved.')
INSERT INTO CARD VALUES(3,'Roles','The following Roles exist within this system.','The following Roles exist within this system.','The following Roles exist within this system.')
INSERT INTO CARD VALUES(4,'id.mitre.org','MITREid Connect is an implementation of OpenID Connect for use by MITRE employees. This service is available to all current MITRE employees on any site that supports the OpenID Connect protocol.','reserved','This OpenID Connect service is built from the MITREid Connect Open Source project started by The MITRE Corporation. This is a research prototype system with best-effort availability.  This service aims to be a generally-applicable reference implementation of OpenID Connect and OAuth 2 and provides a range of useful features such as signed tokens and token introspection. This server also supports Dynamic Client Registration for the standard OpenID Connect scopes of openid , address , email , profile , phone , and offline_access . Other scopes and features are available by registering a client through a systems administrator.  More information about the project can be found on the MTIREid Connect page on GitHub. There, you can submit bug reports, give feedback, or even contribute code patches for additional features you''d like to see. For server configuration details, go to: https://id.mitre.org/connect/.well-known/openid-configuration')
INSERT INTO CARD VALUES(5,'oidc.mit.edu','MIT, This OpenID Connect service is built from the MITREid Connect Open Source project, from The MITRE Corporation and the MIT Kerberos and Internet Trust Consortium.','Massachusetts Institute of Technology, a not-for-profit corporation located at 77 Massachusetts Ave.','oidc.mit.edu, This OpenID Connect service is built from the MITREid Connect Open Source project, from The MITRE Corporation and the MIT Kerberos and Internet Trust Consortium. For server configuration details, go to: https://oidc.mit.edu/.well-known/openid-configuration')
INSERT INTO CARD VALUES(6,'No Service Level Guarantee','Reasonable efforts are made to maintain service, however you may notice occasional outages or disruptions as MITREid is being continuously refined. Under this Trust Framework, support of MITRE External Identity Federation services as Identity Provider and/or Relying Party and/or otherwise may be modified or discontinued at any time and with no notice.','Reasonable efforts are made to maintain service, however you may notice occasional outages or disruptions as MITREid is being continuously refined. Under this Trust Framework, support of MITRE External Identity Federation services as Identity Provider and/or Relying Party and/or otherwise may be modified or discontinued at any time and with no notice.','reserved')
INSERT INTO CARD VALUES(7,'Record Keeping & Logging','See legal and technical descriptions.','The required log files for Identity Providers and White Listed Relying Parties under Section 3.6 of this Trust Framework must be protected and maintained in accordance with reasonable commercial practices or as specified in any applicable certification or agreement. Such log files must be made available to MITRE upon request when reasonably necessary to ensure MITRE External Identity Federation system integrity or for purposes of troubleshooting MITRE system issues.','3.6.1. Identity Provider Event Logging  An Identity Provider MUST log the following events:      User approves a site     User logs in to an Identity Provider     User uses an Identity Provider to log into a Relying Party     User denies log in to a Relying Party     User revokes access to a Relying Party  3.6.2. The System Operator shall maintain records of the Identity Provider log files related to MITRE Users and required under Section 3.6.1 in accordance with MITRE Records Management Procedure IM 4.3.1.1. 3.6.3. White Listed Relying Party Event Logging  A White Listed Relying Party MUST log the following events:      User selects an Identity Provider to login to a Relying Party     User uses an Identity Provider to login to a Relying Party     User denies the authentication transaction')
INSERT INTO CARD VALUES(8,'Liability','Reserved','THE MITRE CORPORATION MAKES NO WARRANTY, EXPRESS OR IMPLIED, AS TO THE ACCURACY, CAPABILITY, EFFICIENCY, MERCHANTABILITY, OR FUNCTIONALITY OF MITREid OR MITRE EXTERNAL IDENTITY FEDERATION OR ANY INFORMATION OR SERVICES COMPRISING OR RELATED TO MITREid OR MITRE EXTERNAL IDENTITY FEDERATION. IN NO EVENT WILL THE MITRE CORPORATION BE LIABLE FOR ANY GENERAL, CONSEQUENTIAL, INDIRECT, INCIDENTAL, EXEMPLARY, OR SPECIAL DAMAGES, EVEN IF MITRE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.','Reserved')
INSERT INTO CARD VALUES(9,'The MITRE External Identity Federation Certification Policy','Certification is a material consideration favoring the System Operator decision on inclusion of parties to a White List, but is neither required nor sufficient.','Reserved for legal text.','White Listed Identity Providers have their Trust Root for OpenID 2.0 or Issuer for OpenID Connect reflected in the Relying Party.')
INSERT INTO CARD VALUES(10,'Grey List Policy','Grey Listed sites include any Identity Provider or Relying Party that implements the standards in Section 3 and that has not been added to a White List or Black List by the System Operator. Any Grey Listed Relying Party may accept a Derived Federated Credential from any User and any User may use a Derived Federated Credential to access the site of any Grey Listed Relying Party.  If an Identity Provider is Grey Listed, then the Relying Party makes the decision on a per use or other basis whether to accept and rely upon credentials issued by that Identity Provider. If a Relying Party is on a Grey List then the User makes the decision whether to authorize the use of their Derived Federated Credential to access the Relying Party site.','legal text placeholder','No additional configuration is required for any Grey List site or service.')
INSERT INTO CARD VALUES(11,'White List Policy','The System Operator, by approval of or delegated authority by the Policy Authority, may add a Relying Party site to the MITREid White List, thereby allowing automated authorization for MITRE Users.','reserved','3.3.2. White Listed Identity Providers  White Listed Identity Providers have their Trust Root for OpenID 2.0 or Issuer for OpenID Connect reflected in the Relying Party. 3.3.3. White Listed Relying Parties  White Listed Relying Parties have their Trust Root for OpenID 2.0 and/or their Client ID for OpenID Connect configured in the Relying Party system.')
INSERT INTO CARD VALUES(12,'Black List Policy','The System Operator may determine whether a site is in violation of these rules or otherwise disapproved for federation, and upon such determination may add that site to the MITREid Black List, thereby preventing a MITRE User from using their Derived Federated Credential to access such site and preventing Derived Federated Credentials from Black Listed Identity Providers from being used to access MITRE Relying Party sites under this Trust Framework.','reserved','3.3.4. Black Listed Identity Providers  Black Listed Identity Providers have their Trust Root for OpenID 2.0 or Issuer for OpenID Connect configured to be denied in Relying Party system. 3.3.5. Black Listed Relying Parties  Black Listed Relying Party\u2019s have their Trust Root for OpenID 2.0 and their redirect URI for OpenID Connect configured to be denied in the Relying Party system.')
INSERT INTO TAG VALUES(1,'PolicyAuthorityParty')
INSERT INTO TAG VALUES(2,'SystemEndpoint')
INSERT INTO TAG VALUES(3,'ExecutiveOfficer')
INSERT INTO TAG VALUES(4,'TrustFrameworkSystemRoles')
INSERT INTO TAG VALUES(5,'SystemOperator')
INSERT INTO TAG VALUES(6,'RelyingParty')
INSERT INTO TAG VALUES(7,'TrustFramework')
INSERT INTO TAG VALUES(8,'IdentityTrustFramework')
INSERT INTO TAG VALUES(9,'Liability')
INSERT INTO TAG VALUES(10,'Certification')
INSERT INTO TAG VALUES(11,'SystemRoles')
INSERT INTO TAG VALUES(12,'Roles')
INSERT INTO TAG VALUES(13,'Scope')
INSERT INTO TAG VALUES(14,'IdentityProvider')
INSERT INTO TAG VALUES(15,'UserAuthority')
INSERT INTO TAG VALUES(16,'WhiteList')
INSERT INTO TAG VALUES(17,'BlackList')
INSERT INTO TAG VALUES(18,'GreyList')
INSERT INTO TAG VALUES(19,'SLA')
INSERT INTO TAG VALUES(20,'Logging')
INSERT INTO TAG VALUES(21,'Audit')
INSERT INTO TAG VALUES(22,'User')
INSERT INTO DEPENDENCY VALUES(5,3,'Policy Authority')
INSERT INTO DEPENDENCY VALUES(6,3,'Relying Party')
INSERT INTO DEPENDENCY VALUES(10,1,'Scope')
INSERT INTO DEPENDENCY VALUES(11,1,'Liability')
INSERT INTO DEPENDENCY VALUES(12,1,'Roles')
INSERT INTO DEPENDENCY VALUES(14,1,'Certification')
INSERT INTO DEPENDENCY VALUES(15,3,'Identity Provider')
INSERT INTO DEPENDENCY VALUES(16,3,'User Authority')
INSERT INTO DEPENDENCY VALUES(17,1,'White List')
INSERT INTO DEPENDENCY VALUES(18,1,'Grey List')
INSERT INTO DEPENDENCY VALUES(19,1,'Black List')
INSERT INTO DEPENDENCY VALUES(20,1,'Service Level Agreement')
INSERT INTO DEPENDENCY VALUES(21,1,'Record Keeping and Reporting')
INSERT INTO DEPENDENCY VALUES(22,11,'Administrator of the white list')
INSERT INTO DEPENDENCY VALUES(24,12,'Administrator of the black list')
INSERT INTO DEPENDENCYTAGS VALUES(6,6)
INSERT INTO DEPENDENCYTAGS VALUES(10,13)
INSERT INTO DEPENDENCYTAGS VALUES(11,9)
INSERT INTO DEPENDENCYTAGS VALUES(12,12)
INSERT INTO DEPENDENCYTAGS VALUES(14,10)
INSERT INTO DEPENDENCYTAGS VALUES(5,1)
INSERT INTO DEPENDENCYTAGS VALUES(15,14)
INSERT INTO DEPENDENCYTAGS VALUES(16,15)
INSERT INTO DEPENDENCYTAGS VALUES(17,16)
INSERT INTO DEPENDENCYTAGS VALUES(18,18)
INSERT INTO DEPENDENCYTAGS VALUES(19,17)
INSERT INTO DEPENDENCYTAGS VALUES(20,19)
INSERT INTO DEPENDENCYTAGS VALUES(21,21)
INSERT INTO DEPENDENCYTAGS VALUES(21,20)
INSERT INTO DEPENDENCYTAGS VALUES(22,5)
INSERT INTO DEPENDENCYTAGS VALUES(24,5)
INSERT INTO PROVIDES VALUES(5,2)
INSERT INTO PROVIDES VALUES(1,8)
INSERT INTO PROVIDES VALUES(8,9)
INSERT INTO PROVIDES VALUES(2,13)
INSERT INTO PROVIDES VALUES(3,12)
INSERT INTO PROVIDES VALUES(4,14)
INSERT INTO PROVIDES VALUES(5,14)
INSERT INTO PROVIDES VALUES(4,2)
INSERT INTO PROVIDES VALUES(9,10)
INSERT INTO PROVIDES VALUES(6,19)
INSERT INTO PROVIDES VALUES(7,21)
INSERT INTO PROVIDES VALUES(7,20)
INSERT INTO PROVIDES VALUES(10,18)
INSERT INTO PROVIDES VALUES(11,16)
INSERT INTO PROVIDES VALUES(12,17)
