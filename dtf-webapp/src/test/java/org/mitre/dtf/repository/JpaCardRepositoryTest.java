package org.mitre.dtf.repository;

import static org.junit.Assert.*;

import java.util.List;
import java.util.Set;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mitre.dtf.model.Card;
import org.mitre.dtf.model.Dependency;
import org.mitre.dtf.model.Tag;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.google.common.collect.Lists;
import com.google.common.collect.Sets;

/**
 * Unit testing of JpaCardRepository class. These tests makes some assumptions
 * about the initial state of the db as scripted in the Card.sql resource file.
 * 
 * @author wkim
 *
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration("file:src/main/webapp/WEB-INF/application-context.xml")
public class JpaCardRepositoryTest {

	@Autowired
	JpaCardRepository cardRepository;

	/*
	 * See src/resources/db/*.sql files for expected initial data.
	 */
	
	// test data
	private Card card1;
	private Card card2;
	
	private Dependency dependency1;
	private Dependency dependency2;
	
	private Tag tag1;
	
	@Before
	public void setUp() {
		tag1 = new Tag("OpenID Provider");
		tag1.setId(1L);
		
		dependency1 = new Dependency("OpenID Provider #1");
		dependency1.setId(1L);
		dependency1.setTags(Sets.newHashSet(tag1));
		dependency2 = new Dependency("OpenID Provider #2");
		dependency2.setId(2L);
		dependency2.setTags(Sets.newHashSet(tag1));
		
		card1 = new Card("MIT/MITRE Scenario", "The Handshake site allows MITRE users to invite non-MITRE users to participate on the Handshake site...");
		card1.setId(1L);
		card1.setDependencies(Lists.newArrayList(dependency1, dependency2));
		
		card2 = new Card("id.mitre.org", "MITREid is an OpenID Identity Provider for MITRE employees...");
		card2.setId(2L);
		card2.setProvidesTags(Sets.newHashSet(tag1));
	}
	
	@Test
	public void testInitialState() {

		Set<Card> cards = cardRepository.getAll();
		
		assertTrue(cards.size() == 2);
		assertTrue(cards.contains(card1));
		assertTrue(cards.contains(card2));
	}
	
	@Test
	public void testRoundTrip() {
		
		Card testCard = new Card("id.mitre.org", "MITREid is an OpenID Identity Provider for MITRE employees.");
		
		cardRepository.save(testCard);
		Set<Card> cards = cardRepository.getAll();
		
		testCard.setId(3L); // card in db will have been autogenerated an id of 3
		
		assertTrue(cards.size() == 3);
		assertTrue(cards.contains(testCard));
	}
	
	@Test
	public void testDependencies() {
		
		Card c = cardRepository.getById(1);
		List<Dependency> dependencies = c.getDependencies();
		
		assertTrue(dependencies.size() == 2);
		assertTrue(dependencies.contains(dependency1));
		assertTrue(dependencies.contains(dependency2));
	}
	
	@Test
	public void testProvides() {
		
		Card c = cardRepository.getById(2);
		Set<Tag> tags = c.getProvidesTags();
		
		assertTrue(tags.size() == 1);
		assertTrue(tags.contains(tag1));
	}
	
}
